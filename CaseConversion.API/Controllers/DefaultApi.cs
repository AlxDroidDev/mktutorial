/*
 * Case Conversion API
 *
 * This is a simple API that is meant to be used only as an example
 *
 * OpenAPI spec version: 0.1
 * Contact: you@your-company.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using CaseConversion.API.Attributes;
using Microsoft.AspNetCore.Authorization;
using CaseConversion.API.Models;
using CaseConversion.API.Service;

namespace CaseConversion.API.Controllers
{
    /// <summary>
    ///         [Route("/AlexSimonettiArbeit/CaseConversionAPI/0.1/convert")]
    /// </summary>
    [ApiController]
    [Route("/api/v1/CaseConversion")]
    public class DefaultApiController : ControllerBase
    {

        private CaseConversionService service = new CaseConversionService();

        /// <summary>
        /// converts the input sentence to the case type specified
        /// </summary>
        /// <remarks>converts the input sentence to the case type specified</remarks>
        /// <param name="input">the sentence to be converted and conversion type</param>
        /// <response code="201">item created</response>
        /// <response code="400">invalid input</response>
        [HttpPost]
        [Route("convert")]
        [ValidateModelState]
        [SwaggerOperation("ConvertCase")]
        [SwaggerResponse(statusCode: 200, type: typeof(ConvertResponse), description: "accepted")]
        public virtual IActionResult ConvertCase([FromBody]ConvertRequest input)
        {

            if ((input.Sentence == null) || (input.CaseType == null))
                return StatusCode(400);

            string resultString = service.Convert(input.CaseType ?? ConversionCaseType.CAMEL, input.Sentence);

            ConvertResponse response = new ConvertResponse();
            response.CaseType = input.CaseType;
            response.Input = input.Sentence;
            response.Output = resultString;

            return new ObjectResult(response);

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(ConvertResponse));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...

            /*
            string exampleJson = null;
            exampleJson = "{\n  \"output\" : \"pleaseConvertMeToACamelCaseString\",\n  \"input\" : \"pleASE conVert ME To a CAMEL CASE string\",\n  \"caseType\" : \"camel\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ConvertResponse>(exampleJson)
            : default(ConvertResponse);

            //TODO: Change the data returned

            return new ObjectResult(example);
            */
        }


        [HttpGet]
        [Route("health")]
        [SwaggerOperation("health")]
        public virtual IActionResult Health()
        {
            return new ObjectResult("OK");
        }


    }

}